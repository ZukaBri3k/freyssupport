{"ast":null,"code":"var _jsxFileName = \"D:\\\\ForumProject\\\\freyssupport\\\\src\\\\components\\\\NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport { useContext } from \"react\";\nimport { auth } from \"../firebase-config\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport UINavBarUnLoged from \"../pages/html/navbar/UINavBarUnloged\";\nimport UINavBarLoged from \"../pages/html/navbar/UINavBarloged\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n\n  const navigate = useNavigate();\n  let [navbar, setNavBar] = useState();\n  const {\n    currentUser\n  } = useContext(UserContext);\n\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/\");\n    } catch {\n      alert(\"For some reasons we can't deconnect you from your account\");\n    }\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, () => {\n      if (currentUser == null) {\n        setNavBar( /*#__PURE__*/_jsxDEV(UINavBarUnLoged, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this));\n      } else {\n        setNavBar( /*#__PURE__*/_jsxDEV(UINavBarLoged, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this));\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navbar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NavBar, \"1wn25sh8a0Ix47VvF12ViXcV0c4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["D:/ForumProject/freyssupport/src/components/NavBar.js"],"names":["React","useEffect","useState","useNavigate","UserContext","useContext","auth","onAuthStateChanged","signOut","UINavBarUnLoged","UINavBarLoged","NavBar","navigate","navbar","setNavBar","currentUser","logOut","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,eAA5C;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAI,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAAlC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBV,UAAU,CAACD,WAAD,CAAlC;;AAEA,QAAMY,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMR,OAAO,CAACF,IAAD,CAAb;AACAM,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,CAGE,MAAM;AACNK,MAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;AACF,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,kBAAkB,CAACD,IAAD,EAAO,MAAM;AAC7B,UAAIS,WAAW,IAAI,IAAnB,EAAyB;AACvBD,QAAAA,SAAS,eAAC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,eAAC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAT;AACD;AACF,KANiB,CAAlB;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO;AAAA,cAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAzBuBF,M;UACLR,W;;;KADKQ,M","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport { auth } from \"../firebase-config\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport UINavBarUnLoged from \"../pages/html/navbar/UINavBarUnloged\";\r\nimport UINavBarLoged from \"../pages/html/navbar/UINavBarloged\";\r\n\r\nexport default function NavBar() {\r\n  const navigate = useNavigate();\r\n  let [navbar, setNavBar] = useState();\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      navigate(\"/\");\r\n    } catch {\r\n      alert(\"For some reasons we can't deconnect you from your account\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, () => {\r\n      if (currentUser == null) {\r\n        setNavBar(<UINavBarUnLoged />);\r\n      } else {\r\n        setNavBar(<UINavBarLoged/>);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return <div>{navbar}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}