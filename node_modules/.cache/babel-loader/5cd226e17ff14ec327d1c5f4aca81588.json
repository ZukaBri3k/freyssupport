{"ast":null,"code":"var _jsxFileName = \"E:\\\\ForumProject\\\\freyssupport\\\\src\\\\pages\\\\Private\\\\AccountHome\\\\AccountHome.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase-config\";\nimport { UserContext, userContext } from \"../../../context/UserContext\";\nimport { useContext, useState } from \"react\";\nimport { db } from \"../../../firebase-config\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountHome() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [affichage, setAffichage] = useState(\"\");\n  const users = collection(db, \"users\"); //on recupere la collection des users\n\n  const resultArray = []; //la liste qui va contenir tous les emails\n\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/\");\n    } catch {\n      alert(\"For some reasons we can't deconnect you from your account\");\n    }\n  };\n\n  const readResult = async () => {\n    const q = query(users, where(\"name\", \"==\", recherche.current.value.toUpperCase()) //on recupère tous les resultats dont name = à la valeur de l'input\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(doc => {\n      resultArray.push(doc.id); //on ajoute tous les mails dans la liste\n    }); //console.log(resultArray);\n\n    setAffichage(() => {\n      //on change l'affichage\n      const resList = resultArray.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 49\n      }, this)); //on map tous les mails pouor qu'ils soient dans des puces de liste\n\n      return (\n        /*#__PURE__*/\n        //return graphiquement la liste de tous les mails\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"email :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), resList]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      );\n    });\n  };\n\n  readResult();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light\",\n      children: [\"Hi, \", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logOut,\n      children: \"deconnection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountHome, \"3jIB0dyjyMtE4yLHq+OPlnBWgxc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountHome\");","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/pages/Private/AccountHome/AccountHome.js"],"names":["React","signOut","useNavigate","auth","UserContext","userContext","useContext","useState","db","collection","query","where","getDocs","AccountHome","navigate","currentUser","affichage","setAffichage","users","resultArray","logOut","alert","readResult","q","recherche","current","value","toUpperCase","querySnapshot","forEach","doc","push","id","resList","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,8BAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAkD,oBAAlD;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBT,UAAU,CAACF,WAAD,CAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMW,KAAK,GAAGT,UAAU,CAACD,EAAD,EAAK,OAAL,CAAxB,CAJoC,CAIG;;AACvC,QAAMW,WAAW,GAAG,EAApB,CALoC,CAKZ;;AACxB,QAAMC,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMnB,OAAO,CAACE,IAAD,CAAb;AACAW,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,CAGE,MAAM;AACNO,MAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,CAAC,GAAGb,KAAK,CACbQ,KADa,EAEbP,KAAK,CAAC,MAAD,EAAS,IAAT,EAAea,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAAwBC,WAAxB,EAAf,CAFQ,CAE8C;AAF9C,KAAf;AAIA,UAAMC,aAAa,GAAG,MAAMhB,OAAO,CAACW,CAAD,CAAnC;AACAK,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BX,MAAAA,WAAW,CAACY,IAAZ,CAAiBD,GAAG,CAACE,EAArB,EAD6B,CACH;AAC3B,KAFD,EAN6B,CAS7B;;AACAf,IAAAA,YAAY,CAAC,MAAM;AACjB;AACA,YAAMgB,OAAO,GAAGd,WAAW,CAACe,GAAZ,CAAiBC,IAAD,iBAAU;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA1B,CAAhB,CAFiB,CAE2C;;AAC5D;AAAA;AACE;AACA;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGF,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AASD,KAZW,CAAZ;AAaD,GAvBD;;AAwBAX,EAAAA,UAAU;AAEV,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,sCACM;AAAA;AAAA;AAAA;AAAA,cADN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjDuBP,W;UACLX,W;;;KADKW,W","sourcesContent":["import React from \"react\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase-config\";\r\nimport { UserContext, userContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\nexport default function AccountHome() {\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useContext(UserContext);\r\n  const [affichage, setAffichage] = useState(\"\");\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir tous les emails\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      navigate(\"/\");\r\n    } catch {\r\n      alert(\"For some reasons we can't deconnect you from your account\");\r\n    }\r\n  };\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n      users,\r\n      where(\"name\", \"==\", recherche.current.value.toUpperCase()) //on recupère tous les resultats dont name = à la valeur de l'input\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      resultArray.push(doc.id); //on ajoute tous les mails dans la liste\r\n    });\r\n    //console.log(resultArray);\r\n    setAffichage(() => {\r\n      //on change l'affichage\r\n      const resList = resultArray.map((name) => <li>{name}</li>); //on map tous les mails pouor qu'ils soient dans des puces de liste\r\n      return (\r\n        //return graphiquement la liste de tous les mails\r\n        <div>\r\n          <ul>\r\n            <h1>email :</h1>\r\n            {resList}\r\n          </ul>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  readResult();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-light\">\r\n        Hi, <p></p>\r\n      </h1>\r\n      <button onClick={logOut}>deconnection</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}