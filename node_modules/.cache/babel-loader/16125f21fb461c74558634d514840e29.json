{"ast":null,"code":"var _jsxFileName = \"E:\\\\ForumProject\\\\freyssupport\\\\src\\\\pages\\\\Private\\\\AccountHome\\\\AccountHome.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase-config\";\nimport { UserContext, userContext } from \"../../../context/UserContext\";\nimport { useContext, useState } from \"react\";\nimport { db } from \"../../../firebase-config\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountHome() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [affichage, setAffichage] = useState(\"\");\n  const users = collection(db, \"users\"); //on recupere la collection des users\n\n  const resultArray = []; //la liste qui va contenir toutes les infos\n\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/\");\n    } catch {\n      alert(\"For some reasons we can't deconnect you from your account\");\n    }\n  };\n\n  const readResult = async () => {\n    const q = query(users, where(\"mail\", \"==\", currentUser.email) //on recupère tous les resultats dont name = à la valeur de l'input\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(doc => {\n      resultArray.push(doc.values); //on ajoute tous les mails dans la liste\n    });\n    console.log(resultArray);\n  };\n\n  readResult();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light\",\n      children: [\"Hi, \", affichage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logOut,\n      children: \"deconnection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountHome, \"3jIB0dyjyMtE4yLHq+OPlnBWgxc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountHome\");","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/pages/Private/AccountHome/AccountHome.js"],"names":["React","signOut","useNavigate","auth","UserContext","userContext","useContext","useState","db","doc","getDoc","AccountHome","navigate","currentUser","affichage","setAffichage","users","collection","resultArray","logOut","alert","readResult","q","query","where","email","querySnapshot","getDocs","forEach","push","values","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,8BAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBP,UAAU,CAACF,WAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,KAAK,GAAGC,UAAU,CAACT,EAAD,EAAK,OAAL,CAAxB,CAJoC,CAIG;;AACvC,QAAMU,WAAW,GAAG,EAApB,CALoC,CAKZ;;AACxB,QAAMC,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMlB,OAAO,CAACE,IAAD,CAAb;AACAS,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,CAGE,MAAM;AACNQ,MAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,CAAC,GAAGC,KAAK,CACbP,KADa,EAEbQ,KAAK,CAAC,MAAD,EAAS,IAAT,EAAeX,WAAW,CAACY,KAA3B,CAFQ,CAE0B;AAF1B,KAAf;AAIA,UAAMC,aAAa,GAAG,MAAMC,OAAO,CAACL,CAAD,CAAnC;AACAI,IAAAA,aAAa,CAACE,OAAd,CAAuBnB,GAAD,IAAS;AAC7BS,MAAAA,WAAW,CAACW,IAAZ,CAAiBpB,GAAG,CAACqB,MAArB,EAD6B,CACC;AAC/B,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACD,GAVD;;AAWAG,EAAAA,UAAU;AACV,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,yBAAgCP,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjCuBR,W;UACLT,W;;;KADKS,W","sourcesContent":["import React from \"react\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase-config\";\r\nimport { UserContext, userContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nexport default function AccountHome() {\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useContext(UserContext);\r\n  const [affichage, setAffichage] = useState(\"\");\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir toutes les infos\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      navigate(\"/\");\r\n    } catch {\r\n      alert(\"For some reasons we can't deconnect you from your account\");\r\n    }\r\n  };\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n      users,\r\n      where(\"mail\", \"==\", currentUser.email) //on recupère tous les resultats dont name = à la valeur de l'input\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      resultArray.push(doc.values); //on ajoute tous les mails dans la liste\r\n    });\r\n    console.log(resultArray);\r\n  };\r\n  readResult();\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-light\">Hi, {affichage}</h1>\r\n      <button onClick={logOut}>deconnection</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}