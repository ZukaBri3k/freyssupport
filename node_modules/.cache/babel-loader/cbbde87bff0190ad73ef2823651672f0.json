{"ast":null,"code":"var _jsxFileName = \"D:\\\\ForumProject\\\\freyssupport\\\\src\\\\pages\\\\Private\\\\research\\\\Research.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { useContext, useState } from \"react\";\nimport { db } from \"../../../firebase-config\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport NavBar from \"../../../components/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Research() {\n  _s();\n\n  const recherche = useRef();\n  const users = collection(db, \"users\"); //on recupere la collection des users\n\n  const resultArray = []; //la liste qui va contenir tous les emails\n\n  const resList = null;\n\n  const readResult = async () => {\n    const q = query(users, where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(doc => {\n      resultArray.push(doc.data().mail); //on ajoute tous les mails dans la liste\n    });\n    console.log(resultArray);\n    const resList = resultArray.map(mail => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: mail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 49\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: recherche\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: readResult,\n      children: \"Rechercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Research, \"bPoXz777h/m/TWvz0HxZZvE5uro=\");\n\n_c = Research;\n\nvar _c;\n\n$RefreshReg$(_c, \"Research\");","map":{"version":3,"sources":["D:/ForumProject/freyssupport/src/pages/Private/research/Research.js"],"names":["React","useEffect","useRef","UserContext","useContext","useState","db","collection","query","where","getDocs","NavBar","useNavigate","Research","recherche","users","resultArray","resList","readResult","q","current","value","querySnapshot","forEach","doc","push","data","mail","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAMC,SAAS,GAAGZ,MAAM,EAAxB;AACA,QAAMa,KAAK,GAAGR,UAAU,CAACD,EAAD,EAAK,OAAL,CAAxB,CAHiC,CAGM;;AACvC,QAAMU,WAAW,GAAG,EAApB,CAJiC,CAIT;;AACxB,QAAMC,OAAO,GAAG,IAAhB;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,CAAC,GAAGX,KAAK,CACXO,KADW,EAEXN,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBK,SAAS,CAACM,OAAV,CAAkBC,KAAnC,CAFM,CAEoC;AAFpC,KAAf;AAIE,UAAMC,aAAa,GAAG,MAAMZ,OAAO,CAACS,CAAD,CAAnC;AACAG,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BR,MAAAA,WAAW,CAACS,IAAZ,CAAiBD,GAAG,CAACE,IAAJ,GAAWC,IAA5B,EAD6B,CACM;AACpC,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AAEA,UAAMC,OAAO,GAAGD,WAAW,CAACc,GAAZ,CAAiBH,IAAD,iBAAU;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAhB;AAEH,GAbD;;AAeA,sBACE;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEb;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAOD;;GA7BuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\"\r\nimport NavBar from \"../../../components/NavBar\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Research() {\r\n    \r\n  const recherche = useRef()\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir tous les emails\r\n  const resList = null\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n        users,\r\n        where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach((doc) => {\r\n        resultArray.push(doc.data().mail); //on ajoute tous les mails dans la liste\r\n      });\r\n      console.log(resultArray)\r\n\r\n      const resList = resultArray.map((mail) => <li>{mail}</li>);\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n        <input type=\"text\" ref={recherche}></input>\r\n        <button onClick={readResult} >Rechercher</button>\r\n        <ul>{resList}</ul>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}