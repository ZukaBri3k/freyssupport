{"ast":null,"code":"var _jsxFileName = \"E:\\\\ForumProject\\\\freyssupport\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, updateEmail, updatePassword, updateProfile, reauthenticateWithCredential } from \"firebase/auth\";\nimport { auth } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserContextProvider(props) {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setCurrentUser(currentUser);\n      setLoadingData(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, pwd //envoi une requête de création de compte avec l'auth récupéré dans firebase-config\n  ) => createUserWithEmailAndPassword(auth, email, pwd);\n\n  const signIn = (email, pwd //envoi une requête de connection de compte avec l'auth récupéré dans firebase-config\n  ) => signInWithEmailAndPassword(auth, email, pwd);\n\n  const updateUser = (email, password) => {\n    const credential = promptForCredentials();\n    reauthenticateWithCredential(auth.currentUser, credential).then(() => {\n      updateEmail(auth.currentUser, email);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      signUp,\n      currentUser,\n      signIn,\n      updateUser\n    },\n    children: !loadingData && props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContextProvider, \"8G11jKqPCI2gX/mmZEZgxmqK8O4=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/context/UserContext.js"],"names":["createContext","useState","useEffect","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","updateEmail","updatePassword","updateProfile","reauthenticateWithCredential","auth","UserContext","UserContextProvider","props","currentUser","setCurrentUser","loadingData","setLoadingData","unsubscribe","signUp","email","pwd","signIn","updateUser","password","credential","promptForCredentials","then","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SACEC,0BADF,EAEEC,8BAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,aANF,EAOEC,4BAPF,QAQO,eARP;AASA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,OAAO,MAAMC,WAAW,gBAAGX,aAAa,EAAjC;AAEP,OAAO,SAASY,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAGb,kBAAkB,CAACK,IAAD,EAAQI,WAAD,IAAiB;AAC5DC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAHqC,CAAtC;AAKA,WAAOC,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,MAAM,GAAG,CACbC,KADa,EAEbC,GAFa,CAET;AAFS,OAGVjB,8BAA8B,CAACM,IAAD,EAAOU,KAAP,EAAcC,GAAd,CAHnC;;AAKA,QAAMC,MAAM,GAAG,CACbF,KADa,EAEbC,GAFa,CAET;AAFS,OAGVlB,0BAA0B,CAACO,IAAD,EAAOU,KAAP,EAAcC,GAAd,CAH/B;;AAKA,QAAME,UAAU,GAAG,CAACH,KAAD,EAAQI,QAAR,KAAqB;AACtC,UAAMC,UAAU,GAAGC,oBAAoB,EAAvC;AACAjB,IAAAA,4BAA4B,CAACC,IAAI,CAACI,WAAN,EAAmBW,UAAnB,CAA5B,CAA2DE,IAA3D,CAAgE,MAAM;AACpErB,MAAAA,WAAW,CAACI,IAAI,CAACI,WAAN,EAAmBM,KAAnB,CAAX;AACD,KAFD;AAGD,GALD;;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAF;AAAUL,MAAAA,WAAV;AAAuBQ,MAAAA,MAAvB;AAA+BC,MAAAA;AAA/B,KAA7B;AAAA,cACG,CAACP,WAAD,IAAgBH,KAAK,CAACe;AADzB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnCehB,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  updateEmail,\r\n  updatePassword,\r\n  updateProfile,\r\n  reauthenticateWithCredential,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase-config\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserContextProvider(props) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setCurrentUser(currentUser);\r\n      setLoadingData(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signUp = (\r\n    email,\r\n    pwd //envoi une requête de création de compte avec l'auth récupéré dans firebase-config\r\n  ) => createUserWithEmailAndPassword(auth, email, pwd);\r\n\r\n  const signIn = (\r\n    email,\r\n    pwd //envoi une requête de connection de compte avec l'auth récupéré dans firebase-config\r\n  ) => signInWithEmailAndPassword(auth, email, pwd);\r\n\r\n  const updateUser = (email, password) => {\r\n    const credential = promptForCredentials();\r\n    reauthenticateWithCredential(auth.currentUser, credential).then(() => {\r\n      updateEmail(auth.currentUser, email);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ signUp, currentUser, signIn, updateUser }}>\r\n      {!loadingData && props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}