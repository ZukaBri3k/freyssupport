{"ast":null,"code":"var _jsxFileName = \"E:\\\\ForumProject\\\\freyssupport\\\\src\\\\pages\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useRef } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport SignUpI from \"./html/signup/SignUpI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const {\n    currentUser,\n    signUp\n  } = useContext(UserContext);\n  const [validation, setValidation] = useState(\"\");\n  const navigate = useNavigate();\n  const inputs = useRef([]);\n\n  const addInput = el => {\n    if (el && !inputs.current.includes(el)) {\n      //récupère tous les inputs\n      inputs.current.push(el);\n    }\n  };\n\n  const dataPerso = useRef([]);\n\n  const addDataPerso = el => {\n    if (el && !dataPerso.current.includes(el)) {\n      //récupère tous les inputs\n      dataPerso.current.push(el);\n    }\n  };\n\n  const formRef = useRef();\n\n  const handleForm = async e => {\n    e.preventDefault();\n\n    if (inputs.current[1].value.length < 6) {\n      setValidation(\"6 characters minimum\");\n      return;\n    } else if (inputs.current[1].value !== inputs.current[2].value) {\n      setValidation(\"Les mots de passe ne sont pas identiques\");\n      return;\n    } //console.log(\"PRIVATE\", currentUser.email);\n\n\n    try {\n      const email = inputs.current[0].value;\n      const pwd = inputs.current[1].value;\n      const cred = await signUp(email, pwd); //attend une réponse de la requete signUp dans UserContext\n      //console.log(cred.user.email);\n\n      const addUser = async () => {\n        try {\n          const docRef = await setDoc(doc(db, \"users\", cred.user.email), {\n            name: dataPerso.current[0].value.toUpperCase(),\n            surName: dataPerso.current[1].value.toUpperCase(),\n            mail: email\n          });\n        } catch (e) {\n          console.error(\"Error adding document: \", e);\n        }\n      };\n\n      addUser();\n      formRef.current.reset();\n      navigate(\"/private/account/\");\n    } catch {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignUpI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUp, \"pJPlhFLpCcSQoGL8e54KeDKrMWM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/pages/SignUp.js"],"names":["React","useState","useContext","useRef","UserContext","useNavigate","db","setDoc","doc","SignUpI","SignUp","currentUser","signUp","validation","setValidation","navigate","inputs","addInput","el","current","includes","push","dataPerso","addDataPerso","formRef","handleForm","e","preventDefault","value","length","email","pwd","cred","addUser","docRef","user","name","toUpperCase","surName","mail","console","error","reset"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { db } from \"../firebase-config\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport SignUpI from \"./html/signup/SignUpI\";\r\n\r\nexport default function SignUp() {\r\n  const { currentUser, signUp } = useContext(UserContext);\r\n  const [validation, setValidation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const inputs = useRef([]);\r\n  const addInput = (el) => {\r\n    if (el && !inputs.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      inputs.current.push(el);\r\n    }\r\n  };\r\n\r\n  const dataPerso = useRef([]);\r\n  const addDataPerso = (el) => {\r\n    if (el && !dataPerso.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      dataPerso.current.push(el);\r\n    }\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputs.current[1].value.length < 6) {\r\n      setValidation(\"6 characters minimum\");\r\n      return;\r\n    } else if (inputs.current[1].value !== inputs.current[2].value) {\r\n      setValidation(\"Les mots de passe ne sont pas identiques\");\r\n      return;\r\n    }\r\n\r\n    //console.log(\"PRIVATE\", currentUser.email);\r\n\r\n    try {\r\n      const email = inputs.current[0].value;\r\n      const pwd = inputs.current[1].value;\r\n      const cred = await signUp(email, pwd); //attend une réponse de la requete signUp dans UserContext\r\n      //console.log(cred.user.email);\r\n\r\n      const addUser = async () => {\r\n        try {\r\n          const docRef = await setDoc(doc(db, \"users\", cred.user.email), {\r\n            name: dataPerso.current[0].value.toUpperCase(),\r\n            surName: dataPerso.current[1].value.toUpperCase(),\r\n            mail: email,\r\n          });\r\n        } catch (e) {\r\n          console.error(\"Error adding document: \", e);\r\n        }\r\n      };\r\n      addUser();\r\n      formRef.current.reset();\r\n      navigate(\"/private/account/\");\r\n    } catch {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SignUpI />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}