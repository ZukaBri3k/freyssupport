{"ast":null,"code":"var _jsxFileName = \"E:\\\\ForumProject\\\\freyssupport\\\\src\\\\pages\\\\Private\\\\research\\\\Research.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { useContext, useState } from \"react\";\nimport { db } from \"../../../firebase-config\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport NavBar from \"../../../components/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footer from \"../../html/footer/footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Research() {\n  _s();\n\n  const recherche = useRef();\n  const users = collection(db, \"users\"); //on recupere la collection des users\n\n  const resultArray = []; //la liste qui va contenir tous les emails\n\n  const [resList, setResList] = useState();\n\n  const readResult = async () => {\n    const q = query(users, where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(doc => {\n      resultArray.push([doc.data().mail, doc.data().classe]); //on ajoute tous les mails dans la liste\n    }); //console.log(resultArray)\n\n    setResList(resultArray.map(mail => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"text-light\",\n      children: [\"mail: \", mail[0], \", classe: \", mail[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"felx-wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: recherche\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: readResult,\n          children: \"Rechercher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: resList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Research, \"z58ESOq8JB5+miqL8pRZgcHHZQ8=\");\n\n_c = Research;\n\nvar _c;\n\n$RefreshReg$(_c, \"Research\");","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/pages/Private/research/Research.js"],"names":["React","useEffect","useRef","UserContext","useContext","useState","db","collection","query","where","getDocs","NavBar","useNavigate","Footer","Research","recherche","users","resultArray","resList","setResList","readResult","q","current","value","querySnapshot","forEach","doc","push","data","mail","classe","map","display","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,SAAS,GAAGb,MAAM,EAAxB;AACA,QAAMc,KAAK,GAAGT,UAAU,CAACD,EAAD,EAAK,OAAL,CAAxB,CAFiC,CAEM;;AACvC,QAAMW,WAAW,GAAG,EAApB,CAHiC,CAGT;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;;AAEA,QAAMe,UAAU,GAAG,YAAY;AAC7B,UAAMC,CAAC,GAAGb,KAAK,CACbQ,KADa,EAEbP,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBM,SAAS,CAACO,OAAV,CAAkBC,KAAnC,CAFQ,CAEkC;AAFlC,KAAf;AAIA,UAAMC,aAAa,GAAG,MAAMd,OAAO,CAACW,CAAD,CAAnC;AACAG,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BT,MAAAA,WAAW,CAACU,IAAZ,CAAiB,CAACD,GAAG,CAACE,IAAJ,GAAWC,IAAZ,EAAkBH,GAAG,CAACE,IAAJ,GAAWE,MAA7B,CAAjB,EAD6B,CAC2B;AACzD,KAFD,EAN6B,CAS7B;;AAEAX,IAAAA,UAAU,CACRF,WAAW,CAACc,GAAZ,CAAiBF,IAAD,iBACd;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,2BACSA,IAAI,CAAC,CAAD,CADb,gBAC4BA,IAAI,CAAC,CAAD,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADQ,CAAV;AAOD,GAlBD;;AAoBA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAElB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAvCuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport NavBar from \"../../../components/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../../html/footer/footer/Footer\";\r\n\r\nexport default function Research() {\r\n  const recherche = useRef();\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir tous les emails\r\n  const [resList, setResList] = useState();\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n      users,\r\n      where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      resultArray.push([doc.data().mail, doc.data().classe]); //on ajoute tous les mails dans la liste\r\n    });\r\n    //console.log(resultArray)\r\n\r\n    setResList(\r\n      resultArray.map((mail) => (\r\n        <li className=\"text-light\">\r\n          mail: {mail[0]}, classe: {mail[1]}\r\n        </li>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"felx-wrap\" }}>\r\n        <NavBar />\r\n        <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n          <input type=\"text\" ref={recherche}></input>\r\n          <button onClick={readResult}>Rechercher</button>\r\n          <ul>{resList}</ul>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}