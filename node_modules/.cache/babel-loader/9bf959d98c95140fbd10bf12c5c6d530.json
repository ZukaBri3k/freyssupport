{"ast":null,"code":"import _slicedToArray from\"E:/ForumProject/freyssupport/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState,useEffect}from\"react\";import{signInWithEmailAndPassword,createUserWithEmailAndPassword,onAuthStateChanged,updateEmail,updatePassword,updateProfile,reauthenticateWithCredential}from\"firebase/auth\";import{auth}from\"../firebase-config\";import{jsx as _jsx}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/createContext();export function UserContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loadingData=_useState4[0],setLoadingData=_useState4[1];useEffect(function(){var unsubscribe=onAuthStateChanged(auth,function(currentUser){setCurrentUser(currentUser);setLoadingData(false);});return unsubscribe;},[]);var signUp=function signUp(email,pwd//envoi une requête de création de compte avec l'auth récupéré dans firebase-config\n){return createUserWithEmailAndPassword(auth,email,pwd);};var signIn=function signIn(email,pwd//envoi une requête de connection de compte avec l'auth récupéré dans firebase-config\n){return signInWithEmailAndPassword(auth,email,pwd);};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{signUp:signUp,currentUser:currentUser,signIn:signIn},children:!loadingData&&props.children});}","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/context/UserContext.js"],"names":["createContext","useState","useEffect","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","updateEmail","updatePassword","updateProfile","reauthenticateWithCredential","auth","UserContext","UserContextProvider","props","currentUser","setCurrentUser","loadingData","setLoadingData","unsubscribe","signUp","email","pwd","signIn","children"],"mappings":"kHAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OACEC,0BADF,CAEEC,8BAFF,CAGEC,kBAHF,CAIEC,WAJF,CAKEC,cALF,CAMEC,aANF,CAOEC,4BAPF,KAQO,eARP,CASA,OAASC,IAAT,KAAqB,oBAArB,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGX,aAAa,EAAjC,CAEP,MAAO,SAASY,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACzC,cAAsCZ,QAAQ,EAA9C,wCAAOa,WAAP,eAAoBC,cAApB,eACA,eAAsCd,QAAQ,CAAC,IAAD,CAA9C,yCAAOe,WAAP,eAAoBC,cAApB,eAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,WAAW,CAAGb,kBAAkB,CAACK,IAAD,CAAO,SAACI,WAAD,CAAiB,CAC5DC,cAAc,CAACD,WAAD,CAAd,CACAG,cAAc,CAAC,KAAD,CAAd,CACD,CAHqC,CAAtC,CAKA,MAAOC,CAAAA,WAAP,CACD,CAPQ,CAON,EAPM,CAAT,CASA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CACbC,KADa,CAEbC,GAAI;AAFS,QAGVjB,CAAAA,8BAA8B,CAACM,IAAD,CAAOU,KAAP,CAAcC,GAAd,CAHpB,EAAf,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CACbF,KADa,CAEbC,GAAI;AAFS,QAGVlB,CAAAA,0BAA0B,CAACO,IAAD,CAAOU,KAAP,CAAcC,GAAd,CAHhB,EAAf,CAKA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEF,MAAM,CAANA,MAAF,CAAUL,WAAW,CAAXA,WAAV,CAAuBQ,MAAM,CAANA,MAAvB,CAA7B,UACG,CAACN,WAAD,EAAgBH,KAAK,CAACU,QADzB,EADF,CAKD","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  updateEmail,\r\n  updatePassword,\r\n  updateProfile,\r\n  reauthenticateWithCredential,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase-config\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserContextProvider(props) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setCurrentUser(currentUser);\r\n      setLoadingData(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signUp = (\r\n    email,\r\n    pwd //envoi une requête de création de compte avec l'auth récupéré dans firebase-config\r\n  ) => createUserWithEmailAndPassword(auth, email, pwd);\r\n\r\n  const signIn = (\r\n    email,\r\n    pwd //envoi une requête de connection de compte avec l'auth récupéré dans firebase-config\r\n  ) => signInWithEmailAndPassword(auth, email, pwd);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ signUp, currentUser, signIn }}>\r\n      {!loadingData && props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}