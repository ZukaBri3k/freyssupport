{"ast":null,"code":"import _asyncToGenerator from\"E:/ForumProject/freyssupport/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"E:/ForumProject/freyssupport/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"E:\\\\ForumProject\\\\freyssupport\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useRef}from\"react\";import{UserContext}from\"../../../context/UserContext\";import{useContext,useState}from\"react\";import{db}from\"../../../firebase-config\";import{collection,query,where,getDocs}from\"firebase/firestore\";import NavBar from\"../../../components/NavBar\";import{useNavigate}from\"react-router-dom\";import Footer from\"../../html/footer/footer/Footer\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Research(){var recherche=useRef();var users=collection(db,\"users\");//on recupere la collection des users\nvar resultArray=[];//la liste qui va contenir tous les emails\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),resList=_useState2[0],setResList=_useState2[1];var readResult=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var q,querySnapshot;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:q=query(users,where(\"classe\",\"==\",recherche.current.value)//on recupère tous les resultats dont name = à la valeur de l'input\n);_context.next=3;return getDocs(q);case 3:querySnapshot=_context.sent;querySnapshot.forEach(function(doc){resultArray.push([doc.data().mail,doc.data().classe]);//on ajoute tous les mails dans la liste\n});//console.log(resultArray)\nsetResList(resultArray.map(function(mail){return/*#__PURE__*/_jsxs(\"li\",{className:\"text-light\",children:[\"mail: \",mail[0],\", classe: \",mail[1]]});}));case 6:case\"end\":return _context.stop();}}},_callee);}));return function readResult(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{position:\"relative\"},children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:recherche}),/*#__PURE__*/_jsx(\"button\",{onClick:readResult,children:\"Rechercher\"}),/*#__PURE__*/_jsx(\"ul\",{children:resList})]}),/*#__PURE__*/_jsx(Footer,{})]})});}","map":{"version":3,"sources":["E:/ForumProject/freyssupport/src/pages/Private/research/Research.js"],"names":["React","useEffect","useRef","UserContext","useContext","useState","db","collection","query","where","getDocs","NavBar","useNavigate","Footer","Research","recherche","users","resultArray","resList","setResList","readResult","q","current","value","querySnapshot","forEach","doc","push","data","mail","classe","map","position","textAlign"],"mappings":"gWAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,WAAT,KAA4B,8BAA5B,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,OAASC,EAAT,KAAmB,0BAAnB,CACA,OAASC,UAAT,CAAqBC,KAArB,CAA4BC,KAA5B,CAAmCC,OAAnC,KAAkD,oBAAlD,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,SAAS,CAAGb,MAAM,EAAxB,CACA,GAAMc,CAAAA,KAAK,CAAGT,UAAU,CAACD,EAAD,CAAK,OAAL,CAAxB,CAAuC;AACvC,GAAMW,CAAAA,WAAW,CAAG,EAApB,CAAwB;AACxB,cAA8BZ,QAAQ,EAAtC,wCAAOa,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,UAAU,0FAAG,uJACXC,CADW,CACPb,KAAK,CACbQ,KADa,CAEbP,KAAK,CAAC,QAAD,CAAW,IAAX,CAAiBM,SAAS,CAACO,OAAV,CAAkBC,KAAnC,CAA0C;AAFlC,CADE,uBAKWb,CAAAA,OAAO,CAACW,CAAD,CALlB,QAKXG,aALW,eAMjBA,aAAa,CAACC,OAAd,CAAsB,SAACC,GAAD,CAAS,CAC7BT,WAAW,CAACU,IAAZ,CAAiB,CAACD,GAAG,CAACE,IAAJ,GAAWC,IAAZ,CAAkBH,GAAG,CAACE,IAAJ,GAAWE,MAA7B,CAAjB,EAAwD;AACzD,CAFD,EAGA;AAEAX,UAAU,CACRF,WAAW,CAACc,GAAZ,CAAgB,SAACF,IAAD,qBACd,YAAI,SAAS,CAAC,YAAd,oBACSA,IAAI,CAAC,CAAD,CADb,cAC4BA,IAAI,CAAC,CAAD,CADhC,GADc,EAAhB,CADQ,CAAV,CAXiB,sDAAH,kBAAVT,CAAAA,UAAU,0CAAhB,CAoBA,mBACE,sCACE,aAAK,KAAK,CAAE,CAAEY,QAAQ,CAAE,UAAZ,CAAZ,wBACE,KAAC,MAAD,IADF,cAEE,aAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAlC,wBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAElB,SAAxB,EADF,cAEE,eAAQ,OAAO,CAAEK,UAAjB,wBAFF,cAGE,oBAAKF,OAAL,EAHF,GAFF,cAOE,KAAC,MAAD,IAPF,GADF,EADF,CAaD","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport NavBar from \"../../../components/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../../html/footer/footer/Footer\";\r\n\r\nexport default function Research() {\r\n  const recherche = useRef();\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir tous les emails\r\n  const [resList, setResList] = useState();\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n      users,\r\n      where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      resultArray.push([doc.data().mail, doc.data().classe]); //on ajoute tous les mails dans la liste\r\n    });\r\n    //console.log(resultArray)\r\n\r\n    setResList(\r\n      resultArray.map((mail) => (\r\n        <li className=\"text-light\">\r\n          mail: {mail[0]}, classe: {mail[1]}\r\n        </li>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <NavBar />\r\n        <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n          <input type=\"text\" ref={recherche}></input>\r\n          <button onClick={readResult}>Rechercher</button>\r\n          <ul>{resList}</ul>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}