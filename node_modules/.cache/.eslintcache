[{"E:\\ForumProject\\freyssupport\\src\\index.js":"1","E:\\ForumProject\\freyssupport\\src\\reportWebVitals.js":"2","E:\\ForumProject\\freyssupport\\src\\context\\UserContext.js":"3","E:\\ForumProject\\freyssupport\\src\\App.js":"4","E:\\ForumProject\\freyssupport\\src\\firebase-config.js":"5","E:\\ForumProject\\freyssupport\\src\\pages\\SignUp.js":"6","E:\\ForumProject\\freyssupport\\src\\pages\\Home.js":"7","E:\\ForumProject\\freyssupport\\src\\pages\\SignIn.js":"8","E:\\ForumProject\\freyssupport\\src\\pages\\ModifyMyAccount.js":"9","E:\\ForumProject\\freyssupport\\src\\pages\\Private\\Private.js":"10","E:\\ForumProject\\freyssupport\\src\\pages\\Redirect.js":"11","E:\\ForumProject\\freyssupport\\src\\pages\\Private\\AccountHome\\AccountHome.js":"12","E:\\ForumProject\\freyssupport\\src\\pages\\Private\\research\\Research.js":"13","E:\\ForumProject\\freyssupport\\src\\components\\NavBar.js":"14","E:\\ForumProject\\freyssupport\\src\\pages\\html\\footer\\footer\\Footer.js":"15"},{"size":638,"mtime":1648398200032,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1647095126311,"results":"18","hashOfConfig":"17"},{"size":1262,"mtime":1649498901795,"results":"19","hashOfConfig":"17"},{"size":1054,"mtime":1649500953253,"results":"20","hashOfConfig":"17"},{"size":1030,"mtime":1649583858415,"results":"21","hashOfConfig":"17"},{"size":22708,"mtime":1649579456804,"results":"22","hashOfConfig":"17"},{"size":2457,"mtime":1649540075469,"results":"23","hashOfConfig":"17"},{"size":3114,"mtime":1648745189823,"results":"24","hashOfConfig":"17"},{"size":22698,"mtime":1649524090610,"results":"25","hashOfConfig":"17"},{"size":426,"mtime":1649501086277,"results":"26","hashOfConfig":"17"},{"size":155,"mtime":1649084398927,"results":"27","hashOfConfig":"17"},{"size":6343,"mtime":1649501502829,"results":"28","hashOfConfig":"17"},{"size":1680,"mtime":1649504905341,"results":"29","hashOfConfig":"17"},{"size":7914,"mtime":1649587942384,"results":"30","hashOfConfig":"17"},{"size":1965,"mtime":1649504171462,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"vs2foy",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"35"},"E:\\ForumProject\\freyssupport\\src\\index.js",[],[],["86","87"],"E:\\ForumProject\\freyssupport\\src\\reportWebVitals.js",[],[],"E:\\ForumProject\\freyssupport\\src\\context\\UserContext.js",["88","89","90","91"],[],"import { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  updateEmail,\r\n  updatePassword,\r\n  updateProfile,\r\n  reauthenticateWithCredential,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase-config\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserContextProvider(props) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setCurrentUser(currentUser);\r\n      setLoadingData(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signUp = (\r\n    email,\r\n    pwd //envoi une requête de création de compte avec l'auth récupéré dans firebase-config\r\n  ) => createUserWithEmailAndPassword(auth, email, pwd);\r\n\r\n  const signIn = (\r\n    email,\r\n    pwd //envoi une requête de connection de compte avec l'auth récupéré dans firebase-config\r\n  ) => signInWithEmailAndPassword(auth, email, pwd);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ signUp, currentUser, signIn }}>\r\n      {!loadingData && props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\App.js",[],[],"E:\\ForumProject\\freyssupport\\src\\firebase-config.js",[],[],"E:\\ForumProject\\freyssupport\\src\\pages\\SignUp.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],[],"import React, { useState, useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { db } from \"../firebase-config\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport \"./html/signup/assets/css/signUpStyle.css\";\r\nimport \"./html/signup/assets/bootstrap/css/bootstrap.min.css\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"./html/footer/footer/Footer\";\r\n\r\nexport default function SignUp() {\r\n  const { signUp } = useContext(UserContext);\r\n  const [validation, setValidation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [classe, setClass] = useState(\"Classe\");\r\n  const [option1, setOption1] = useState(\"Option 1\");\r\n  const [option2, setOption2] = useState(\"Option 2\");\r\n  const [option3, setOption3] = useState(\"Option 3\");\r\n  const [optionValidation, setOptionValidation] = useState(\"\");\r\n  const [disableOption1, setDisableOption1] = useState(true);\r\n  const [disableOption2, setDisableOption2] = useState(true);\r\n  const [disableOption3, setDisableOption3] = useState(true);\r\n  const [hiddenLink, setHiddenLink] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n  const [currentLinkUse, setCurrentLinkUse] = useState([null, null, null]);\r\n\r\n  const inputs = useRef([]);\r\n  const addInput = (el) => {\r\n    if (el && !inputs.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      inputs.current.push(el);\r\n    }\r\n  };\r\n\r\n  const dataPerso = useRef([]);\r\n  const addDataPerso = (el) => {\r\n    if (el && !dataPerso.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      dataPerso.current.push(el);\r\n    }\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n    //console.log(inputs.current[2].value);\r\n\r\n    if (inputs.current[1].value.length < 6) {\r\n      setValidation(\"6 characters minimum\");\r\n      return;\r\n    } else if (inputs.current[1].value !== inputs.current[2].value) {\r\n      setValidation(\"Les mots de passe ne sont pas identiques\");\r\n      return;\r\n    } else if (\r\n      classe === \"Classe\" ||\r\n      (classe === \"Premiere\" && option1 === \"Option 1\") ||\r\n      (classe === \"Premiere\" && option2 === \"Option 2\") ||\r\n      (classe === \"Premiere\" && option3 === \"Option 3\") ||\r\n      (classe === \"Terminale\" && option1 === \"Option 1\") ||\r\n      (classe === \"Terminale\" && option2 === \"Option 2\")\r\n    ) {\r\n      setOptionValidation(\"Veuillez remplir tous les champs\");\r\n      return;\r\n    }\r\n\r\n    //console.log(\"PRIVATE\", currentUser.email);\r\n\r\n    try {\r\n      const email = inputs.current[0].value;\r\n      const pwd = inputs.current[1].value;\r\n      const cred = await signUp(email, pwd); //attend une réponse de la requete signUp dans UserContext\r\n      //console.log(cred.user.email);\r\n\r\n      const addUser = async () => {\r\n        try {\r\n          if (classe === \"Seconde\") {\r\n            await setDoc(doc(db, \"users\", cred.user.email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          } else if (classe === \"Premiere\") {\r\n            await setDoc(doc(db, \"users\", cred.user.email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              option1: option1,\r\n              option2: option2,\r\n              option3: option3,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          } else if (classe === \"Terminale\") {\r\n            await setDoc(doc(db, \"users\", cred.user.email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              option1: option1,\r\n              option2: option2,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          }\r\n        } catch (e) {\r\n          //console.log(e)\r\n        }\r\n      };\r\n      await addUser();\r\n      formRef.current.reset();\r\n      navigate(\"/private/account/\");\r\n    } catch (e) {\r\n      //console.log(e);\r\n      if (e.code === \"auth/email-already-in-use\") {\r\n        setOptionValidation(\"Cet email est déjà utilisé\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <section\r\n        className=\"register-photo\"\r\n        style={{\r\n          background: \"rgb(33,88,116)\",\r\n        }}\r\n      >\r\n        <div className=\"form-container\">\r\n          <form ref={formRef} onSubmit={handleForm}>\r\n            <h2 className=\"text-center\">\r\n              <strong>Créer</strong> votre compte.\r\n            </h2>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                ref={addInput}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                ref={addInput}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password-repeat\"\r\n                placeholder=\"Mot de passe (vérifier)\"\r\n                ref={addInput}\r\n                required\r\n              />\r\n            </div>\r\n            <p className=\"text-danger mt-1\">{validation}</p>\r\n            <div\r\n              style={{\r\n                marginBottom: \"16px\",\r\n              }}\r\n            >\r\n              <input\r\n                className=\"form-control ms-auto\"\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                placeholder=\"Nom\"\r\n                ref={addDataPerso}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                className=\"form-control mt-auto\"\r\n                type=\"text\"\r\n                name=\"Prenom\"\r\n                placeholder=\"Prénom\"\r\n                ref={addDataPerso}\r\n                style={{\r\n                  marginTop: \"0px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div />\r\n            <div className=\"align-content-center mb-3\">\r\n              <div className=\"dropdown d-xl-flex justify-content-xl-center align-items-xl-center\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                  }}\r\n                >\r\n                  {classe}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Seconde\");\r\n                      setDisableOption1(true);\r\n                      setDisableOption2(true);\r\n                      setDisableOption3(true);\r\n                      setOption1(\"Option 1\");\r\n                      setOption2(\"Option 2\");\r\n                      setOption3(\"Option 3\");\r\n                      setCurrentLinkUse([null, null, null]);\r\n                      setHiddenLink([\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Seconde \r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Premiere\");\r\n                      setDisableOption1(false);\r\n                      setDisableOption2(false);\r\n                      setDisableOption3(false);\r\n                    }}\r\n                  >\r\n                    Premiere\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Terminale\");\r\n                      setDisableOption1(false);\r\n                      setDisableOption2(false);\r\n                      setDisableOption3(true);\r\n                      setOption3(\"Option 3\");\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = null;\r\n                    }}\r\n                  >\r\n                    Terminale\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-xl-flex justify-content-xl-center align-items-xl-center\">\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-flex d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                    marginRight: \"70px\",\r\n                  }}\r\n                  disabled={disableOption1}\r\n                >\r\n                  {option1}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                    marginRight: \"70px\",\r\n                  }}\r\n                  disabled={disableOption2}\r\n                >\r\n                  {option2}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                  }}\r\n                  disabled={disableOption3}\r\n                >\r\n                  {option3}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-danger mt-1\">{optionValidation}</p>\r\n            <div\r\n              className=\"form-check\"\r\n              style={{\r\n                marginTop: \"50px\",\r\n              }}\r\n            >\r\n              <label className=\"form-check-label\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" required />\r\n                J'accepte les règles d'utilisateur\r\n              </label>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <button\r\n                className=\"btn btn-primary d-block w-100\"\r\n                type=\"submit\"\r\n                style={{\r\n                  background: \"rgb(33,88,116)\",\r\n                }}\r\n              >\r\n                Créer mon compte\r\n              </button>\r\n            </div>\r\n            <a className=\"already\" href=\"/signin\">\r\n              Vous avez déjà un compte connectez-vous <strong>ici</strong> !\r\n            </a>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\pages\\Home.js",[],[],"E:\\ForumProject\\freyssupport\\src\\pages\\SignIn.js",["119","120"],[],"import React, { useState, useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./html/signin/assets/css/signin.css\";\r\nimport \"./html/signin/assets/bootstrap/css/bootstrap.min.css\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"./html/footer/footer/Footer\";\r\n\r\nexport default function SignIn() {\r\n  const { currentUser, signIn } = useContext(UserContext);\r\n  const [validation, setValidation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const inputs = useRef([]);\r\n  const addInput = (el) => {\r\n    if (el && !inputs.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      inputs.current.push(el);\r\n    }\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"PRIVATE\", currentUser.email);\r\n\r\n    try {\r\n      const email = inputs.current[0].value;\r\n      const pwd = inputs.current[1].value;\r\n      const cred = await signIn(email, pwd); //attend une réponse de la requete signUp dans UserContext\r\n      formRef.current.reset();\r\n      //console.log(cred.user.email);\r\n      navigate(\"/private/account/\");\r\n    } catch {\r\n      setValidation(\"L'identifiant ou le mot de passe est incorrect\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <section\r\n        className=\"d-xl-flex align-items-xl-start register-photo\"\r\n        style={{\r\n          background: \"rgb(33,88,116)\",\r\n          marginBottom: \"1px\",\r\n          marginRight: \"0px\",\r\n          marginTop: \"140px\",\r\n        }}\r\n      >\r\n        <div className=\"form-container\">\r\n          <form onSubmit={handleForm} ref={formRef}>\r\n            <h2 className=\"text-center d-xl-flex justify-content-xl-center\">\r\n              <strong>Connectez vous à votre compte</strong>\r\n            </h2>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                ref={addInput}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                ref={addInput}\r\n                required\r\n              />\r\n            </div>\r\n            <p className=\"text-danger mt-1\">{validation}</p>\r\n            <div className=\"mb-3\">\r\n              <button\r\n                className=\"btn btn-primary d-block w-100\"\r\n                type=\"submit\"\r\n                style={{\r\n                  background: \"rgb(33,88,116)\",\r\n                }}\r\n              >\r\n                Se connecter \r\n              </button>\r\n            </div>\r\n            <a className=\"already\" href=\"/signup\">\r\n              Vous n'avez pas de compte ? Créez en un maintenant !\r\n            </a>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\pages\\ModifyMyAccount.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\r\nimport \"./html/signup/assets/css/signUpStyle.css\";\r\nimport \"./html/signup/assets/bootstrap/css/bootstrap.min.css\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"./html/footer/footer/Footer\";\r\nimport { EmailAuthProvider, updateEmail } from \"firebase/auth\";\r\n\r\nexport default function ModifyMyAccount() {\r\n  const { updateUser } = useContext(UserContext);\r\n  const [validation, setValidation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [classe, setClass] = useState(\"Classe\");\r\n  const [option1, setOption1] = useState(\"Option 1\");\r\n  const [option2, setOption2] = useState(\"Option 2\");\r\n  const [option3, setOption3] = useState(\"Option 3\");\r\n  const [optionValidation, setOptionValidation] = useState(\"\");\r\n  const [disableOption1, setDisableOption1] = useState(true);\r\n  const [disableOption2, setDisableOption2] = useState(true);\r\n  const [disableOption3, setDisableOption3] = useState(true);\r\n  const [hiddenLink, setHiddenLink] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n  const [currentLinkUse, setCurrentLinkUse] = useState([null, null, null]);\r\n  const [oldName, setOldName] = useState(\"\");\r\n  const [oldSurName, setOldSurName] = useState(\"\");\r\n\r\n  const inputs = useRef([]);\r\n  const addInput = (el) => {\r\n    if (el && !inputs.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      inputs.current.push(el);\r\n    }\r\n  };\r\n\r\n  const dataPerso = useRef([]);\r\n  const addDataPerso = (el) => {\r\n    if (el && !dataPerso.current.includes(el)) {\r\n      //récupère tous les inputs\r\n      dataPerso.current.push(el);\r\n    }\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n    //console.log(inputs.current[2].value);\r\n\r\n    if (\r\n      classe === \"Classe\" ||\r\n      (classe === \"Premiere\" && option1 === \"Option 1\") ||\r\n      (classe === \"Premiere\" && option2 === \"Option 2\") ||\r\n      (classe === \"Premiere\" && option3 === \"Option 3\") ||\r\n      (classe === \"Terminale\" && option1 === \"Option 1\") ||\r\n      (classe === \"Terminale\" && option2 === \"Option 2\")\r\n    ) {\r\n      setOptionValidation(\"Veuillez remplir tous les champs\");\r\n      return;\r\n    }\r\n\r\n    //console.log(\"PRIVATE\", currentUser.email);\r\n\r\n    try {\r\n      const email = auth.currentUser.email;\r\n\r\n      const addUser = async () => {\r\n        try {\r\n          if (classe === \"Seconde\") {\r\n            await setDoc(doc(db, \"users\", email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          } else if (classe === \"Premiere\") {\r\n            await setDoc(doc(db, \"users\", email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              option1: option1,\r\n              option2: option2,\r\n              option3: option3,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          } else if (classe === \"Terminale\") {\r\n            await setDoc(doc(db, \"users\", email), {\r\n              name: dataPerso.current[0].value.toUpperCase(),\r\n              surName: dataPerso.current[1].value.toUpperCase(),\r\n              mail: email,\r\n              classe: classe,\r\n              option1: option1,\r\n              option2: option2,\r\n              hiddenLink: hiddenLink,\r\n            });\r\n          }\r\n        } catch (e) {\r\n          //console.log(e)\r\n        }\r\n      };\r\n      await addUser();\r\n      formRef.current.reset();\r\n      navigate(\"/private/account/\");\r\n    } catch (e) {\r\n      //console.log(e);\r\n      if (e.code === \"auth/email-already-in-use\") {\r\n        setOptionValidation(\"Cet email est déjà utilisé\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const readResult = async () => {\r\n    const docRef = doc(db, \"users\", auth.currentUser.email);\r\n    const docSnap = await getDoc(docRef);\r\n    setOldName(docSnap.data().name);\r\n    setOldSurName(docSnap.data().surName);\r\n    //console.log(docSnap.data().hiddenLink);\r\n    setHiddenLink(docSnap.data().hiddenLink);\r\n    setClass(docSnap.data().classe);\r\n\r\n    if (docSnap.data().classe === \"Premiere\") {\r\n      setOption1(docSnap.data().option1);\r\n      setOption2(docSnap.data().option2);\r\n      setOption3(docSnap.data().option3);\r\n      setDisableOption1(false);\r\n      setDisableOption2(false);\r\n      setDisableOption3(false);\r\n    } else if (docSnap.data().classe === \"Terminale\") {\r\n      setOption1(docSnap.data().option1);\r\n      setOption2(docSnap.data().option2);\r\n      setDisableOption1(false);\r\n      setDisableOption2(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    readResult();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <section\r\n        className=\"register-photo\"\r\n        style={{\r\n          background: \"rgb(33,88,116)\",\r\n        }}\r\n      >\r\n        <div className=\"form-container\">\r\n          <form ref={formRef} onSubmit={handleForm}>\r\n            <h2 className=\"text-center\">\r\n              <strong>Modifer</strong> vos données.\r\n            </h2>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                ref={addInput}\r\n                disabled\r\n                defaultValue={auth.currentUser.email}\r\n              />\r\n            </div>\r\n\r\n            <p className=\"text-danger mt-1\">{validation}</p>\r\n            <div\r\n              style={{\r\n                marginBottom: \"16px\",\r\n              }}\r\n            >\r\n              <input\r\n                className=\"form-control ms-auto\"\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                placeholder=\"Nom\"\r\n                ref={addDataPerso}\r\n                defaultValue={oldName}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                className=\"form-control mt-auto\"\r\n                type=\"text\"\r\n                name=\"Prenom\"\r\n                placeholder=\"Prénom\"\r\n                ref={addDataPerso}\r\n                style={{\r\n                  marginTop: \"0px\",\r\n                }}\r\n                defaultValue={oldSurName}\r\n              />\r\n            </div>\r\n            <div />\r\n            <div className=\"align-content-center mb-3\">\r\n              <div className=\"dropdown d-xl-flex justify-content-xl-center align-items-xl-center\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                  }}\r\n                >\r\n                  {classe}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Seconde\");\r\n                      setDisableOption1(true);\r\n                      setDisableOption2(true);\r\n                      setDisableOption3(true);\r\n                      setOption1(\"Option 1\");\r\n                      setOption2(\"Option 2\");\r\n                      setOption3(\"Option 3\");\r\n                      setCurrentLinkUse([null, null, null]);\r\n                      setHiddenLink([\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Seconde \r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Premiere\");\r\n                      setDisableOption1(false);\r\n                      setDisableOption2(false);\r\n                      setDisableOption3(false);\r\n                    }}\r\n                  >\r\n                    Premiere\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setClass(\"Terminale\");\r\n                      setDisableOption1(false);\r\n                      setDisableOption2(false);\r\n                      setDisableOption3(true);\r\n                      setOption3(\"Option 3\");\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = null;\r\n                    }}\r\n                  >\r\n                    Terminale\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-xl-flex justify-content-xl-center align-items-xl-center\">\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-flex d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                    marginRight: \"70px\",\r\n                  }}\r\n                  disabled={disableOption1}\r\n                >\r\n                  {option1}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption1(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[0]] = false;\r\n                      currentLinkUse[0] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                    marginRight: \"70px\",\r\n                  }}\r\n                  disabled={disableOption2}\r\n                >\r\n                  {option2}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption2(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[1]] = false;\r\n                      currentLinkUse[1] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-primary dropdown-toggle d-xl-flex\"\r\n                  aria-expanded=\"false\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  type=\"button\"\r\n                  style={{\r\n                    background: \"rgb(33,88,116)\",\r\n                  }}\r\n                  disabled={disableOption3}\r\n                >\r\n                  {option3}\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Philo\");\r\n                      hiddenLink[0] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 0;\r\n                    }}\r\n                    hidden={hiddenLink[0]}\r\n                  >\r\n                    Philo\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"LLCE\");\r\n                      hiddenLink[1] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 1;\r\n                    }}\r\n                    hidden={hiddenLink[1]}\r\n                  >\r\n                    LLCE\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"HGGSP\");\r\n                      hiddenLink[2] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 2;\r\n                    }}\r\n                    hidden={hiddenLink[2]}\r\n                  >\r\n                    HGGSP\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"SES\");\r\n                      hiddenLink[3] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 3;\r\n                    }}\r\n                    hidden={hiddenLink[3]}\r\n                  >\r\n                    SES\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"NSI\");\r\n                      hiddenLink[4] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 4;\r\n                    }}\r\n                    hidden={hiddenLink[4]}\r\n                  >\r\n                    NSI\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Maths\");\r\n                      hiddenLink[5] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 5;\r\n                    }}\r\n                    hidden={hiddenLink[5]}\r\n                  >\r\n                    Maths\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"Physique\");\r\n                      hiddenLink[6] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 6;\r\n                    }}\r\n                    hidden={hiddenLink[6]}\r\n                  >\r\n                    Physique\r\n                  </a>\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setOption3(\"SVT\");\r\n                      hiddenLink[7] = true;\r\n                      hiddenLink[currentLinkUse[2]] = false;\r\n                      currentLinkUse[2] = 7;\r\n                    }}\r\n                    hidden={hiddenLink[7]}\r\n                  >\r\n                    SVT\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-danger mt-1\">{optionValidation}</p>\r\n            <div\r\n              className=\"form-check\"\r\n              style={{\r\n                marginTop: \"50px\",\r\n              }}\r\n            >\r\n              <label className=\"form-check-label\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" required />\r\n                J'accepte les règles d'utilisateur\r\n              </label>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <button\r\n                className=\"btn btn-primary d-block w-100\"\r\n                type=\"submit\"\r\n                style={{\r\n                  background: \"rgb(33,88,116)\",\r\n                }}\r\n              >\r\n                Valider mes données\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\pages\\Private\\Private.js",["152"],[],"import React, { useContext } from \"react\";\r\nimport { Outlet, Navigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nexport default function Private() {\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Outlet />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>Private</div>;\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\pages\\Redirect.js",[],[],"E:\\ForumProject\\freyssupport\\src\\pages\\Private\\AccountHome\\AccountHome.js",["153","154"],[],"import React, { useEffect } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport NavBar from \"../../../components/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../html/My_account/assets/css/HighlightClean.css\";\r\nimport Footer from \"../../html/footer/footer/Footer\";\r\n\r\nexport default function AccountHome() {\r\n  const { currentUser } = useContext(UserContext);\r\n  let [infoPerso, setInfoPerso] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const readResult = async () => {\r\n    const docRef = doc(db, \"users\", currentUser.email);\r\n    const docSnap = await getDoc(docRef);\r\n    //console.log(docSnap.data());\r\n    if (docSnap.data().classe === \"Seconde\") {\r\n      const docRef = doc(db, \"users\", currentUser.email);\r\n      const docSnap = await getDoc(docRef);\r\n      setInfoPerso({\r\n        mail: docSnap.data().mail,\r\n        surName: docSnap.data().surName,\r\n        name: docSnap.data().name,\r\n        classe: docSnap.data().classe,\r\n      });\r\n    } else if (docSnap.data().classe === \"Premiere\") {\r\n      const docRef = doc(db, \"users\", currentUser.email);\r\n      const docSnap = await getDoc(docRef);\r\n      setInfoPerso({\r\n        mail: docSnap.data().mail,\r\n        surName: docSnap.data().surName,\r\n        name: docSnap.data().name,\r\n        classe: docSnap.data().classe,\r\n        option1: docSnap.data().option1,\r\n        option2: docSnap.data().option2,\r\n        option3: docSnap.data().option3,\r\n      });\r\n    } else if (docSnap.data().classe === \"Terminale\") {\r\n      const docRef = doc(db, \"users\", currentUser.email);\r\n      const docSnap = await getDoc(docRef);\r\n      setInfoPerso({\r\n        mail: docSnap.data().mail,\r\n        surName: docSnap.data().surName,\r\n        name: docSnap.data().name,\r\n        classe: docSnap.data().classe,\r\n        option1: docSnap.data().option1,\r\n        option2: docSnap.data().option2,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    readResult();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div\r\n        style={{\r\n          background: \"var(--bs-body-bg)\",\r\n          marginLeft: \"0px\",\r\n        }}\r\n      >\r\n        <section\r\n          className=\"highlight-clean\"\r\n          style={{\r\n            background: \"rgb(33,88,116)\",\r\n            height: \"588.188px\",\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"intro\">\r\n              <h1\r\n                className=\"text-center\"\r\n                style={{\r\n                  color: \"var(--bs-body-bg)\",\r\n                }}\r\n              >\r\n                <strong>\r\n                  <em>My account</em>\r\n                </strong>\r\n              </h1>\r\n            </div>\r\n            <div className=\"buttons\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div\r\n              className=\"row\"\r\n              style={{\r\n                borderColor: \"var(--bs-dark)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"col-md-6 col-lg-6 offset-lg-0\"\r\n                style={{\r\n                  border: \"1px solid var(--bs-body-bg)\",\r\n                }}\r\n              >\r\n                <div />\r\n                <p\r\n                  className=\"text-center\"\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  <strong>\r\n                    <em>Informations confidentielles</em>\r\n                  </strong>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  Nom : {infoPerso.name}\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  Prenom : {infoPerso.surName}\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  Classe : {infoPerso.classe}\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  {infoPerso.classe === \"Seconde\" ? \"\" : \"Vos options : \"}{\" \"}\r\n                  {infoPerso.option1}{\" \"}\r\n                  {infoPerso.classe === \"Seconde\" ? \"\" : \", \"}{\" \"}\r\n                  {infoPerso.option2}{\" \"}\r\n                  {infoPerso.classe === \"Premiere\" ? \", \" : \"\"}{\" \"}\r\n                  {infoPerso.option3}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6\"\r\n                style={{\r\n                  border: \"1px solid var(--bs-body-bg)\",\r\n                }}\r\n              >\r\n                <p\r\n                  className=\"text-center\"\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  <strong>\r\n                    <em>Informations publiques</em>\r\n                  </strong>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  Votre mail pourra être affiché lors de recherche d'aide\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    color: \"var(--bs-body-bg)\",\r\n                  }}\r\n                >\r\n                  Votre mail : {infoPerso.mail}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <a\r\n              className=\"btn btn-primary\"\r\n              role=\"button\"\r\n              style={{\r\n                marginTop: \"96px\",\r\n                background: \"var(--bs-light)\",\r\n                color: \"var(--bs-body-color)\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/private/account/modify\");\r\n              }}\r\n            >\r\n              Modifier\r\n            </a>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\pages\\Private\\research\\Research.js",["155","156","157","158"],[],"import React, { useEffect, useRef } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { db } from \"../../../firebase-config\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport NavBar from \"../../../components/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../../html/footer/footer/Footer\";\r\n\r\nexport default function Research() {\r\n  const recherche = useRef();\r\n  const users = collection(db, \"users\"); //on recupere la collection des users\r\n  const resultArray = []; //la liste qui va contenir tous les emails\r\n  const [resList, setResList] = useState();\r\n\r\n  const readResult = async () => {\r\n    const q = query(\r\n      users,\r\n      where(\"classe\", \"==\", recherche.current.value) //on recupère tous les resultats dont name = à la valeur de l'input\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      resultArray.push([doc.data().mail, doc.data().classe]); //on ajoute tous les mails dans la liste\r\n    });\r\n    //console.log(resultArray)\r\n\r\n    setResList(\r\n      resultArray.map((mail) => (\r\n        <li className=\"text-light\">\r\n          mail: {mail[0]}, classe: {mail[1]}\r\n        </li>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <NavBar />\r\n        <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n          <input type=\"text\" ref={recherche}></input>\r\n          <button onClick={readResult}>Rechercher</button>\r\n          <ul>{resList}</ul>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\ForumProject\\freyssupport\\src\\components\\NavBar.js",["159","160","161","162","163","164","165","166"],[],"E:\\ForumProject\\freyssupport\\src\\pages\\html\\footer\\footer\\Footer.js",["167","168","169"],[],"import React from \"react\";\nimport \"./assets/css/Footer-Dark.css\";\nimport \"./assets/fonts/ionicons.min.css\";\nimport \"./assets/bootstrap/css/bootstrap.min.css\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center\" style={{ marginTop: \"50px\" }}>\n        <footer\n          className=\"footer-dark\"\n          style={{\n            background: \"rgb(33,88,116)\",\n          }}\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-6 col-md-3 item\">\n                <h3>Service</h3>\n                <ul>\n                  <li>\n                    <a href=\"https://www.instagram.com/freyssupport/\">\n                      Nous contacter\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-sm-6 col-md-3 item\">\n                <h3>Informations</h3>\n                <ul>\n                  <li>\n                    <a href=\"#\">Projet</a>\n                  </li>\n                  <li>\n                    <a href=\"#\">Equipe</a>\n                  </li>\n                  <li>\n                    <a href=\"#\">Conditions d'utilisation</a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-6 item text\">\n                <h3>FreysSupport</h3>\n                <p>\n                  Site d'entraide visant à aider tous les lycéens en difficulté\n                  scolaire à l'intérieure du Lycée Eugene Freyssinet\n                </p>\n              </div>\n              <div className=\"col item social\">\n                <a href=\"https://www.instagram.com/freyssupport/\">\n                  <i className=\"icon ion-social-instagram\" />\n                </a>\n              </div>\n            </div>\n            <p className=\"copyright\">FreysSupport © 2022</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":6,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":14},{"ruleId":"174","severity":1,"message":"178","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":17},{"ruleId":"174","severity":1,"message":"179","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":16},{"ruleId":"174","severity":1,"message":"180","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":216,"column":19,"nodeType":"183","endLine":237,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":240,"column":19,"nodeType":"183","endLine":248,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":251,"column":19,"nodeType":"183","endLine":262,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":284,"column":19,"nodeType":"183","endLine":293,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":296,"column":19,"nodeType":"183","endLine":305,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":308,"column":19,"nodeType":"183","endLine":317,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":320,"column":19,"nodeType":"183","endLine":329,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":332,"column":19,"nodeType":"183","endLine":341,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":344,"column":19,"nodeType":"183","endLine":353,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":356,"column":19,"nodeType":"183","endLine":365,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":368,"column":19,"nodeType":"183","endLine":377,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":397,"column":19,"nodeType":"183","endLine":406,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":409,"column":19,"nodeType":"183","endLine":418,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":421,"column":19,"nodeType":"183","endLine":430,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":433,"column":19,"nodeType":"183","endLine":442,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":445,"column":19,"nodeType":"183","endLine":454,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":457,"column":19,"nodeType":"183","endLine":466,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":469,"column":19,"nodeType":"183","endLine":478,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":481,"column":19,"nodeType":"183","endLine":490,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":509,"column":19,"nodeType":"183","endLine":518,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":521,"column":19,"nodeType":"183","endLine":530,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":533,"column":19,"nodeType":"183","endLine":542,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":545,"column":19,"nodeType":"183","endLine":554,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":557,"column":19,"nodeType":"183","endLine":566,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":569,"column":19,"nodeType":"183","endLine":578,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":581,"column":19,"nodeType":"183","endLine":590,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":593,"column":19,"nodeType":"183","endLine":602,"endColumn":20},{"ruleId":"174","severity":1,"message":"184","line":11,"column":11,"nodeType":"176","messageId":"177","endLine":11,"endColumn":22},{"ruleId":"174","severity":1,"message":"185","line":33,"column":13,"nodeType":"176","messageId":"177","endLine":33,"endColumn":17},{"ruleId":"174","severity":1,"message":"186","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":11,"column":29,"nodeType":"176","messageId":"177","endLine":11,"endColumn":40},{"ruleId":"174","severity":1,"message":"187","line":14,"column":11,"nodeType":"176","messageId":"177","endLine":14,"endColumn":21},{"ruleId":"174","severity":1,"message":"188","line":15,"column":22,"nodeType":"176","messageId":"177","endLine":15,"endColumn":35},{"ruleId":"181","severity":1,"message":"182","line":222,"column":19,"nodeType":"183","endLine":243,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":246,"column":19,"nodeType":"183","endLine":254,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":257,"column":19,"nodeType":"183","endLine":268,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":290,"column":19,"nodeType":"183","endLine":299,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":302,"column":19,"nodeType":"183","endLine":311,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":314,"column":19,"nodeType":"183","endLine":323,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":326,"column":19,"nodeType":"183","endLine":335,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":338,"column":19,"nodeType":"183","endLine":347,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":350,"column":19,"nodeType":"183","endLine":359,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":362,"column":19,"nodeType":"183","endLine":371,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":374,"column":19,"nodeType":"183","endLine":383,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":403,"column":19,"nodeType":"183","endLine":412,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":415,"column":19,"nodeType":"183","endLine":424,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":427,"column":19,"nodeType":"183","endLine":436,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":439,"column":19,"nodeType":"183","endLine":448,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":451,"column":19,"nodeType":"183","endLine":460,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":463,"column":19,"nodeType":"183","endLine":472,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":475,"column":19,"nodeType":"183","endLine":484,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":487,"column":19,"nodeType":"183","endLine":496,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":515,"column":19,"nodeType":"183","endLine":524,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":527,"column":19,"nodeType":"183","endLine":536,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":539,"column":19,"nodeType":"183","endLine":548,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":551,"column":19,"nodeType":"183","endLine":560,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":563,"column":19,"nodeType":"183","endLine":572,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":575,"column":19,"nodeType":"183","endLine":584,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":587,"column":19,"nodeType":"183","endLine":596,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":599,"column":19,"nodeType":"183","endLine":608,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":18,"column":3,"nodeType":"191","messageId":"192","endLine":18,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":56,"column":6,"nodeType":"195","endLine":56,"endColumn":8,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"182","line":181,"column":13,"nodeType":"183","endLine":192,"endColumn":14},{"ruleId":"174","severity":1,"message":"197","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"198","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"199","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":20},{"ruleId":"174","severity":1,"message":"200","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":39,"column":19,"nodeType":"183","endLine":46,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":55,"column":19,"nodeType":"183","endLine":55,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":64,"column":19,"nodeType":"183","endLine":73,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":135,"column":19,"nodeType":"183","endLine":142,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":151,"column":19,"nodeType":"183","endLine":151,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":160,"column":19,"nodeType":"183","endLine":169,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":216,"column":19,"nodeType":"183","endLine":223,"endColumn":20},{"ruleId":"193","severity":1,"message":"203","line":233,"column":6,"nodeType":"195","endLine":233,"endColumn":8,"suggestions":"204"},{"ruleId":"181","severity":1,"message":"205","line":32,"column":21,"nodeType":"183","endLine":32,"endColumn":33},{"ruleId":"181","severity":1,"message":"205","line":35,"column":21,"nodeType":"183","endLine":35,"endColumn":33},{"ruleId":"181","severity":1,"message":"205","line":38,"column":21,"nodeType":"183","endLine":38,"endColumn":33},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'updateEmail' is defined but never used.","Identifier","unusedVar","'updatePassword' is defined but never used.","'updateProfile' is defined but never used.","'reauthenticateWithCredential' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'currentUser' is assigned a value but never used.","'cred' is assigned a value but never used.","'EmailAuthProvider' is defined but never used.","'updateUser' is assigned a value but never used.","'setValidation' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readResult'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'useEffect' is defined but never used.","'UserContext' is defined but never used.","'useContext' is defined but never used.","'useNavigate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'currentUser' and 'logOut'. Either include them or remove the dependency array.",["209"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [readResult]",{"range":"214","text":"215"},"Update the dependencies array to be: [currentUser, logOut]",{"range":"216","text":"217"},[2122,2124],"[readResult]",[7871,7873],"[currentUser, logOut]"]